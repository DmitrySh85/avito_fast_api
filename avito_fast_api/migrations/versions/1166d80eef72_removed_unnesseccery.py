"""removed unnesseccery

Revision ID: 1166d80eef72
Revises: 8068b1028a80
Create Date: 2024-10-30 13:22:47.220834

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1166d80eef72'
down_revision: Union[str, None] = '8068b1028a80'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.drop_constraint('contents_location_id_fkey', 'contents', type_='foreignkey')
    op.drop_constraint('contents_link_id_fkey', 'contents', type_='foreignkey')
    op.drop_constraint('contents_item_id_fkey', 'contents', type_='foreignkey')
    op.drop_constraint('contents_image_id_fkey', 'contents', type_='foreignkey')

    op.drop_column('contents', 'item_id')
    op.drop_column('contents', 'location_id')
    op.drop_column('contents', 'image_id')
    op.drop_column('contents', 'link_id')

    op.drop_column('departments', 'telegram_channel_id')

    op.drop_table('locations')
    op.drop_table('images')
    op.drop_table('links')
    op.drop_table('link_previews')
    op.drop_table('items')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('departments', sa.Column('telegram_channel_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('contents', sa.Column('link_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('contents', sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('contents', sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('contents', sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('contents_image_id_fkey', 'contents', 'images', ['image_id'], ['id'])
    op.create_foreign_key('contents_item_id_fkey', 'contents', 'items', ['item_id'], ['id'])
    op.create_foreign_key('contents_link_id_fkey', 'contents', 'links', ['link_id'], ['id'])
    op.create_foreign_key('contents_location_id_fkey', 'contents', 'locations', ['location_id'], ['id'])
    op.create_table('items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('item_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('price_string', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('tg_message_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='items_pkey')
    )
    op.create_table('link_previews',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('link_previews_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('domain', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('images', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='link_previews_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('links',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('preview_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tg_message_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['preview_id'], ['link_previews.id'], name='links_preview_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='links_pkey')
    )
    op.create_table('images',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sizes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('tg_message_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='images_pkey')
    )
    op.create_table('locations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('kind', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tg_message_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='locations_pkey')
    )
    # ### end Alembic commands ###
